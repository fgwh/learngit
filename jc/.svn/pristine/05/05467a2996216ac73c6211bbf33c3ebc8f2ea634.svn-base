create table tb_msgPublish(
	id varchar(64) primary key,
	publishTime datetime not null,
	theme varchar(100) not null,
	content varchar(4000) not null,
	publishMan varchar(80) not null
)

/*****黑、灰名单 *****/

alter table tb_roBlackList add  axisGroup tinyint not null default 0


alter table tb_roBlackList add  creatime Datetime 


update tb_roBlackList set creatime=ApplicateTime 


alter table tb_roGrayList add  axisGroup tinyint not null default 0

alter table tb_roGrayList add  feeCount int  

alter table tb_roGrayList add  feeMoney bigint not null default 0


alter table tb_roGrayList add  creatime Datetime 


update tb_roGrayList set creatime=UpdateTime 


/*****黑、灰名单 *****/

/*****创建车牌比对函数 逐位比对返回不同的个数*****/

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[f_CompareSTR]') and xtype in (N'FN', N'IF', N'TF'))  
drop function [dbo].[f_CompareSTR]  
GO
create function dbo.f_CompareSTR(@s1 varchar(12), @s2 varchar(12))
returns int
as
begin
declare @len int, @i int, @diff int
select @len=len(@s1), @i=1, @diff=0
if @len>7 set @s1=substring(@s1,2,@len)
while @i<=@len
begin
    if substring(@s1,@i,1)<>substring(@s2,@i,1) set @diff+=1
    set @i+=1
end
return @diff
end
go


--------------------------------------打逃二期-----------------------------------------




CREATE  VIEW AbnormalCar WITH SCHEMABINDING  AS
SELECT 
ExVehiclePlate ,AuditStatus,
sum(CASE WHEN ExceptionType='1' THEN 1 ELSE 0 END) as SwitchCard,sum(CASE WHEN ExceptionType='1' AND SquadDate > convert(nvarchar(10),dateadd(m,-12,getdate()),120) THEN 1 ELSE 0 END) as RecSwitchCard,
sum(CASE WHEN ExceptionType='2' THEN 1 ELSE 0 END) AS ETCModelsNotMeet,sum(CASE WHEN ExceptionType='2' AND SquadDate > convert(nvarchar(10),dateadd(m,-12,getdate()),120) THEN 1 ELSE 0 END) as RecETCModelsNotMeet,
sum(CASE WHEN ExceptionType='3' THEN 1 ELSE 0 END) AS ETCPlateNotMeet ,sum(CASE WHEN ExceptionType='3' AND SquadDate > convert(nvarchar(10),dateadd(m,-12,getdate()),120) THEN 1 ELSE 0 END) as RecETCPlateNotMeet,
sum(CASE WHEN ExceptionType='4' THEN 1 ELSE 0 END) as ChargesNotIndetify,sum(CASE WHEN ExceptionType='4' AND SquadDate > convert(nvarchar(10),dateadd(m,-12,getdate()),120) THEN 1 ELSE 0 END) as RecChargesNotIndetify,
sum(CASE WHEN ExceptionType='5' THEN 1 ELSE 0 END) as IndentifyPointExcep,sum(CASE WHEN ExceptionType='5' AND SquadDate > convert(nvarchar(10),dateadd(m,-12,getdate()),120) THEN 1 ELSE 0 END) as RecIndentifyPointExcep,
sum(CASE WHEN ExceptionType='6' THEN 1 ELSE 0 END) as AxisGroupExcep,sum(CASE WHEN ExceptionType='6' AND SquadDate > convert(nvarchar(10),dateadd(m,-12,getdate()),120) THEN 1 ELSE 0 END) as RecAxisGroupExcep,
CASE WHEN (SELECT  count(*) from dbo.tb_roBlackList where VehPlate=ExVehiclePlate)<>0 THEN 1 ELSE 0 END as HistoryEscape,
ExVehicleFlag
FROM dbo.tb_AbnormalCarDeatils acd where  acd.ExTime> convert(nvarchar(10),dateadd(m,-36,getdate()),120) GROUP BY ExVehiclePlate,AuditStatus,ExVehicleFlag



-- ----------------------------
-- Table structure for tb_AbnormalCarDeatils
-- ----------------------------
DROP TABLE [dbo].[tb_AbnormalCarDeatils]
GO
CREATE TABLE [dbo].[tb_AbnormalCarDeatils] (
[id] varchar(50) NOT NULL ,
[EnStationID] smallint NOT NULL ,
[EnTime] datetime NOT NULL ,
[EnVehicleClass] tinyint NOT NULL ,
[EnVehicleStatus] tinyint NOT NULL ,
[EnVehiclePlate] char(12) NOT NULL ,
[ExStationID] smallint NOT NULL ,
[ExTime] datetime NOT NULL ,
[ExVehicleClass] tinyint NOT NULL ,
[ExVehicleStatus] tinyint NOT NULL ,
[ExVehiclePlate] char(12) NOT NULL ,
[ExVehIdentifyPlate] char(12) NOT NULL ,
[DealStatus] bigint NOT NULL ,
[AxisGroupNum] tinyint NOT NULL ,
[TotalWeight] bigint NOT NULL ,
[OverLoadWeight] bigint NOT NULL ,
[RealPath] varchar(255) NOT NULL ,
[Miles] int NOT NULL ,
[OBUPlate] varchar(12) NULL ,
[OverLoadPercent] real NULL ,
[ExceptionType] tinyint NOT NULL ,
[ExVehicleFlag] tinyint NOT NULL ,
[CashMoney] int NULL ,
[EnNetRoadID] smallint NOT NULL ,
[ExNetRoadID] smallint NOT NULL ,
[LaneExSerialNo] char(16) NOT NULL ,
[LaneEnSerialNo] char(16) NOT NULL ,
[EnLaneID] smallint NOT NULL ,
[ExLaneID] smallint NOT NULL ,
[EnRoadID] smallint NOT NULL ,
[ExRoadID] smallint NOT NULL ,
[SquadDate] datetime NOT NULL ,
[ExOperatorID] int NOT NULL ,
[AuditStatus] tinyint NOT NULL 
)


GO

-- ----------------------------
-- Indexes structure for table tb_AbnormalCarDeatils
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table tb_AbnormalCarDeatils
-- ----------------------------
ALTER TABLE [dbo].[tb_AbnormalCarDeatils] ADD PRIMARY KEY ([id])
GO



--数据库字典添加异常种类

--"AbnorType"	"倒卡"           	"1"	""	"0"	""
--"AbnorType"	"ETC车型异常"	   	"2"	""	"1"     ""
--"AbnorType"	"ETC车牌异常"		"3"	""	"2"	""
--"AbnorType"	"有收费无标识"		"4"	""	"3"	""
--"AbnorType"	"收费标识点异常"	"5"	""	"4"	""
--"AbnorType"	"车型与轴组类型异常"	"6"	""	"5"	""


--------------------------------------车牌合法性判断函数-----------------------------------------

create function dbo.vehPlate_legal(@vehPlate varchar(10))
returns bit
as  
begin
	declare @num int,@vehChar varchar(2)
	set @num=1	
	    if(len(@vehPlate)!=7)
	       return 1
		while @num<=len(@vehPlate)
		begin
			set @vehChar=SUBSTRING(@vehPlate,@num,1)
			if (@num=1)		
			begin
			   if(@vehChar not  in ('警','京','津','沪','渝','冀','豫','云','辽','黑','湘','皖','鲁','新','苏','浙','赣','鄂','桂','甘','晋','蒙','陕','吉','闽','贵','粤','青','藏','川','宁','琼'))
				 return 1
			end
			else if (@num=2)
			begin
			   if(UNICODE(@vehChar) not  between 65 and 90 )
				 return 1
			end
			else if (@num=7)
			begin
			   if( (UNICODE(@vehChar) not between 48 and 57) and (UNICODE(@vehChar) not between 65 and 90) and  @vehChar!='挂')
				 return 1
			end
			else if(@num in(3,4,5,6))
			begin
			   if((UNICODE(@vehChar) not between 48 and 57) and (UNICODE(@vehChar) not  between 65 and 90) )
				 return 1
			end
		    set @num=@num+1       
		end
  return 0
end;

--------------------------------------轴组-----------------------------------------
  insert into sys_dic values('402881b357bd38750157bd417433000e','axisGroup','单轴单轮（每侧单轮胎）',1,1,1,'轴组')
  insert into sys_dic values('402881b357bd38750157bd4238460013','axisGroup','单轴双轮（每侧双轮胎）',2,2,2,'轴组')
  insert into sys_dic values('402881b357bd38750157bd43034b0019','axisGroup','并装双轴每侧各两单轮胎',3,3,3,'轴组')
  insert into sys_dic values('402881b357bd38750157bd442a60001e','axisGroup','并装双轴每侧各一单轮胎、双轮胎',4,4,4,'轴组')
  insert into sys_dic values('402881b357bd38750157bd453ef00024','axisGroup','并装双轴双联轴每侧双轮胎',5,5,5,'轴组')
  insert into sys_dic values('402881b357bd38750157bd45dc180029','axisGroup','并装三轴每侧三单轮胎',6,6,6,'轴组')
  insert into sys_dic values('402881b357bd38750157bd46c00e002e','axisGroup','并装三轴每侧各两单轮胎、一双轮胎',7,7,7,'轴组')
  insert into sys_dic values('402881b357bd38750157bd4765600033','axisGroup','并装三轴每侧各一单轮胎、两双轮胎',8,8,8,'轴组')
  insert into sys_dic values('402881b357bd38750157bd482a240038','axisGroup','并装三轴每侧三双轮胎',9,9,9,'轴组')


