package com.hgsoft.main.jcManange.action;

import com.hgsoft.main.jcManange.entity.Conditions;
import com.hgsoft.main.jcManange.entity.ProGrayList;
import com.hgsoft.main.jcManange.entity.RoGrayList;
import com.hgsoft.main.jcManange.service.GrayListService;
import com.hgsoft.security.action.BaseAction;
import com.hgsoft.security.entity.Admin;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.subject.Subject;
import org.apache.struts2.ServletActionContext;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import javax.annotation.Resource;
import javax.servlet.ServletContext;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;

@Controller
@Scope("prototype")
public class GrayListAction extends BaseAction<RoGrayList>{
	
	@Resource
	private GrayListService grayListService;
	
	private Conditions conditions = new Conditions() ;
	

	
	public String list(){
		
		Subject currentUser = SecurityUtils.getSubject();
		if (currentUser.isPermitted("jcManage:man")) {
			conditions.setStaffNo(operator.getStaffNo());
		} 
			
		String[] selectName = new String[]{"plateNum","carNo","vehClass","vehFlag","vehPlateColor","vehBigType","vehMidType","vehSmallType","staffNo"};
		
		list=grayListService.queryAllMessageList(pager, conditions, selectName, "roGrayList", RoGrayList.class);
		
		conditions.setDataSource("0");
		
		return  "list";
	}
	
	public String proList(){
		
		String[] selectName = new String[]{"plateNum","carNo","vehClass","vehFlag","vehPlateColor"};
		
		list=grayListService.queryAllMessageList(pager, conditions, selectName, "proGrayList", ProGrayList.class);
		
		conditions.setDataSource("1");
		return  "list";
	}

	public String plateValidate(){		
		boolean status=grayListService.plateValidate(conditions);
		map.put("status", status);
		return "success";
	}
	public String save(){
		
		entity.setStaffNo(operator.getStaffNo());
		map.put("Msg", grayListService.saveRoGrayList(entity));
		return "success";
	}
	
	public String delete(){
		
		grayListService.deleteById(conditions.getId());
		
        map.put("status", true);
		
		return "success";
		
	}	
	//可疑车辆上传灰名单
	public  String abnorToGray(){
		try {
			grayListService.saveAbnorToGray(entity, conditions.getBatChplateID(), operator);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		map.put("msg", true);
		return SUCCESS;
	}
	
	public String audit(){
						
		map.put("sta", grayListService.saveAudit(conditions));
		
		return  "success";
	}
	
	
    public String upload(){
		
    	grayListService.upload(entity);
		
		return list();
				
	}



	// ================================= 文件下载
	private String fileName;

	public void setFileName(String fileName) throws UnsupportedEncodingException {
		this.fileName = fileName;
	}
	public String getFileName() {
		try {
			return URLEncoder.encode(fileName, "utf-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
			throw new RuntimeException("不可楞!");
		}
	}

	public InputStream getInputStream() throws UnsupportedEncodingException {
		ServletContext servletContext = ServletActionContext.getServletContext();
		// this.fileName = new String(this.fileName.getBytes("UTF-8"),"ISO-8859-1");
		fileName = "灰名单导入模板.xls";
		InputStream inputStream = servletContext.getResourceAsStream("/WEB-INF/template/灰名单导入模板.xls");

		return inputStream;
	}

	public String execute() {
		return "success";
	}

	/**
	 * 文件下载
	 * @return
	 */
	public String downloadTemp() {
		System.out.println("java");
		return "download";
	}
    
    
	public Conditions getConditions() {
		return conditions;
	}

	public void setConditions(Conditions conditions) {
		this.conditions = conditions;
	}
	
	
	public void setRoGrayList(RoGrayList roGrayList) {
		this.entity = roGrayList;
	}

	public RoGrayList getRoGrayList() {
		return entity;
	}
	

}
