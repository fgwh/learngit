<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=gb2312" /><title>demo</title><script language="javascript" src="md5.js"></script><script>var userInfo1,userInfo2,uerInfo3;//工具函数---startfunction CreateEmptyString(l) {    var a = [];    for (var i = 0; i < l; i++) {        a[i] = '*';    }    return a.join('');}//向列表中添加表项function AddList(sel, text, value){    var option = document.createElement("option");    option.appendChild(document.createTextNode(text));    option.setAttribute("value",value);     sel.appendChild(option);    return;}//去除时间格式内的HTTP关键字function FormatTime(time){    var tmp_string = time.split(' ');    var tmp_string_cp = tmp_string[1].split(':');    return tmp_string[0]+'%20'+tmp_string_cp[0]+'%3A'+tmp_string_cp[1]+'%3A'+ tmp_string_cp[2];}var IS_SHOW_DEBUG = 0;  //0-关闭, 1-开启function DebugAlert(str){    if(IS_SHOW_DEBUG == 1){        alert(str);    }}String.prototype.replaceAll = function(f, r) {    var s = new String(this);    while (s.indexOf(f) != -1) {        s = s.replace(f, r);    }    return s.toString();}/** * 解析从控件返回的xml字符串 */function loadXML(xmlString){     if(!g_xmlActive){         return;     }     g_xmlActive.loadXML(xmlString);     if(0 == g_xmlActive.parseError.errorCode){         return g_xmlActive;     }     else{         alert("xml解析错误:" + g_xmlActive.parseError.reason);         return null;     } } function getElementById(dom, tagName){    for(var i = 0; i < dom.childNodes.length; i++){        var node = dom.childNodes[i];        if(node.baseName == tagName){            return node.nodeTypedValue;        }        else{            if(node.childNodes.length != 0){                getElementById(dom.childNodes[i], tagName);            }        }    }}//工具函数---end//全局变量---startvar g_UserLoginId = '';var g_UserName = '';    //登录用户名var g_PassWord = '';    //登录用户密码var g_ServerIP = '';    //服务器IP地址var g_imosActivePlayer = null;var g_curFrameNum = '';var g_xmlActive = null;//全局变量---end//================>功能函数---start//检查控件function InitPage(){       g_imosActivePlayer = document.all.h3c_IMOS_ActiveX;    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");    }        var xmldoc;    try{        xmldoc = new ActiveXObject("Microsoft.XMLDOM");        if(!xmldoc){           xmldoc = new ActiveXObject("MSXML2.DOMDocument.3.0");          }    }     catch(e){            }    g_xmlActive = xmldoc;    if(!g_xmlActive){        alert("xml解析器获取错误，将导致某些功能不可用");    }    else{        g_xmlActive.async = "false";      }}//登录    function DoLogin(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }    var serverIP = document.getElementById("ServerIPText").value;    var userName = document.getElementById("UserNameText").value;    var passWd = document.getElementById("PassWordText").value.toString();    if(passWd == ""){        passWd = "";    }    //alert(typeof passWd);    var flag = g_imosActivePlayer.IMOSAX_InitOCX(serverIP, "8800", userName, passWd, 1);        //获取用户信息    var retStr = g_imosActivePlayer.IMOSAX_GetUserLoginInfo();	  userInfo1 = retStr;    var userObj = loadXML(retStr);    g_UserLoginId = userObj.documentElement.selectNodes("//LOGININFO/UserLoginIDInfo/UserLoginCode")[0].text;}function DoLogin2(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }    var serverIP = document.getElementById("ServerIPText2").value;    var userName = document.getElementById("UserNameText2").value;    var passWd = document.getElementById("PassWordText2").value.toString();    if(passWd == ""){        passWd = "";    }    var flag = g_imosActivePlayer.IMOSAX_LoginEx(serverIP, userName, passWd);	  userInfo2 = flag;}function DoLogin3(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }    var serverIP = document.getElementById("ServerIPText3").value;    var userName = document.getElementById("UserNameText3").value;    var passWd = document.getElementById("PassWordText3").value.toString();    if(passWd == ""){        passWd = "";    }    var flag = g_imosActivePlayer.IMOSAX_LoginEx(serverIP, userName, passWd);	  userInfo3 = flag;}//退出登录function DoLogout(){  if(g_imosActivePlayer){      g_imosActivePlayer.IMOSAX_LogoutEx(userInfo1);      userInfo1 = '';    }}function DoLogout2(){if(g_imosActivePlayer){    g_imosActivePlayer.IMOSAX_LogoutEx(userInfo2);    userInfo2 = '';    }}function DoLogout3(){if(g_imosActivePlayer){    g_imosActivePlayer.IMOSAX_LogoutEx(userInfo3);    userInfo3 = '';    }}function DoSetUserInfo(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }	  g_imosActivePlayer.IMOSAX_SetUserLoginInfo(userInfo1);}function DoSetUserInfo2(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }	  g_imosActivePlayer.IMOSAX_SetUserLoginInfo(userInfo2);}function DoSetUserInfo3(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }	g_imosActivePlayer.IMOSAX_SetUserLoginInfo(userInfo3);}//启动实况function DoStartPlay(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }    var cameraId = document.getElementById("CamIDText").value;    var frameNum = g_curFrameNum;    frameNum = parseInt(frameNum, 10);        if(isNaN(frameNum) || frameNum < 1 || frameNum > 25){        alert("请先选择一个窗格");        return;    }    var flag = g_imosActivePlayer.IMOSAX_StartFrameLive (frameNum, cameraId);    if(0 == flag){        alert("实况播放成功");    }    else{        alert("播放实况失败，错误码：" + flag);    }}//释放实况function DoStopPlay(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }    var frameNum = g_curFrameNum;    if(isNaN(frameNum) || frameNum < 1 || frameNum > 25){        alert("请选择一个窗格");        return;    }    var flag = g_imosActivePlayer.IMOSAX_StopFrameLive(frameNum);    if(0 == flag){        alert("停止实况成功");    }    else{        alert("停止实况失败，错误码：" + flag);    }}//录像本地播放function startLocalReplay(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }    var frameNum = g_curFrameNum;    if(isNaN(frameNum) || frameNum < 1 || frameNum > 25){        alert("请选择一个窗格");        return;    }    //选择录像    var path = document.getElementById("localRecordPath").value;    var flag = g_imosActivePlayer.IMOSAX_StartLocalReplay(frameNum, path);    if(0 == flag){        alert("本地录像成功");    }    else{        alert("本地录像播放失败，错误码：" + flag);    }}//设置云台速度function setPtzSpeed(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }    //选择录像    var value = document.getElementById("ptzValue").value;    if(isNaN(value) || (value < 1) || (value > 9)){        alert("云台速度输入非法");        return;    }    var flag = g_imosActivePlayer.IMOSAX_SetSingleCfgParam("PtzSpeed", value);    if(0 == flag){        alert("设置云台速度成功");    }    else{        alert("设置云台速度失败，错误码：" + flag);    }}/***  查询类型枚举值*//*    'CODE_TYPE' => 0, ///< 编码类型(除用户编码之外) //    'NAME_TYPE' => 1, ///< 名称类型(除用户名称之外) //    'USER_CODE_TYPE' => 2, ///< 用户编码类型 //    'USER_NAME_TYPE' => 3, ///< 用户名称类型 //    'TIME_TYPE' => 4, ///< 时间类型 //    'EVENT_TYPE' => 5, ///< 告警事件类型 //    'EVENT_SECURITY' => 6, ///< 告警事件级别 //    'EVENT_COMFIRMED' => 7, ///< 告警是否已确认 //    'EVENT_TIME' => 8, ///< 告警时间 //    'DEV_SUB_TYPE'=>9,///< 设备子类型//    'INDEX_TYPE'=>10,///< 索引类型(如视频输入通道索引,视频输出通道索引,串口索引,开关量索引) //    'RES_SUB_TYPE' => 11,///< 资源子类型 //        'SRV_TYPE' => 12,               ///< 业务类型 //    'MONITOR_TYPE' => 13,           ///< 监视器类型 //    'MONITOR_NAME' => 14,           ///< 监视器名称 //    'MONITOR_DOMAIN' => 15,         ///< 监视器所在域 //    'CAMERA_NAME' => 16,            ///< 摄像机名称 //    'USER_LOGIN_IP' => 17,          ///< 用户登录IP //    'MON_SRV_STATUS' => 18,         ///< 实况状态 //    'VOCBRD_SRV_STATUS' => 19,      ///< 广播状态 //        //begin added by y07083 2010.11.29 for 备份支持条件查询    'CASE_DESC'               => 20,       ///< 案例描述 //    'TASK_STATUS'             => 21,       ///< 任务状态 //    'TASK_SUB_TIME'           => 22,       ///< 任务提交时间 //    'TASK_END_TIME'           => 23,       ///< 任务结束时间 //    'BAK_START_TIME'          => 24,       ///< 备份开始时间 //    'BAK_END_TIME'            => 25,       ///< 备份结束时间 //    'FILE_CREATE_TIME'        => 26,       ///< 文件创建时间 //    'FILE_CAPACITY'           => 27,       ///< 文件容量 //    'FILE_TYPE '              => 28,       ///< 文件类型 //    'FILE_LOCK_FLAG'          => 29,       ///< 文件锁定标识 //    //end added by y07083 2010.11.29 for 备份支持条件查询    'PHY_DEV_IP'              => 31,       //设备IP地址查询// //added by lisufen 06653 for baobiao    'DOMAIN_FLAG'=>100,///< 域类型,现只支持本外域 //    //Added by liubing,2010-01-19,for VVD39123//    'EXT_DOMAIN_TPYE' => 200,      ///< 外域类型:上/下/平级域 //    'EXT_DOMAIN_IP' => 201,      ///< 外域IP //    'EXT_DOMAIN_PORT'  => 202,      ///< 外域PORT //    'EXT_DOMAIN_TRUNK_NUM' => 203,      ///< 外域干线数量 //    'EXT_DOMAIN_MULTICAST' => 204,      ///< 域间组播策略 //    'EXT_DOMAIN_SESSION' => 205,      ///< 外域引流标志 //        'JOB_STATUS' => 210,          ///< 升级任务状态 //    'JOB_CREATOR' => 211,          ///< 升级任务创建者 //    'JOB_EXEC_TIME' => 212,          ///< 升级任务调度时间 //    'JOB_ESTB_TIME' => 213,          ///< 升级任务制定时间 //    'JOB_END_TIME' => 214,          ///< 升级任务完成时间 //    'JOB_RESULT' => 215,          ///< 升级结果 //        'OPER_TIME' => 220,      ///< 操作时间 //    'OPER_IP' => 221,      ///< 操作者IP地址 //    'OPER_TYPE' => 222,      ///< 操作类型 //    'OPER_RESULT' => 223,      ///< 操作结果 //    'OPER_SERVICE_TYPE' => 224,      ///< 操作的业务类型 //    'OPER_OBJ' => 225,      ///< 操作对象 //    'LABEL_TIME' => 230,          ///< 标签时间点 //    'REC_START_TIME' => 231,          ///< 标签录像开始时间，格式为"hh:mm:ss" //    'REC_END_TIME' => 232,          ///< 标签录像结束时间，格式为"hh:mm:ss" //    'USER_FULL_NAME' => 240,      ///< 用户全名 //    'USER_TEL_PHONE' => 241,      ///< 用户座机电话 //    'USER_MOBILE_PHONE' => 242,      ///< 用户移动电话 //    'USER_EMAIL' => 243,      ///< 用户电子邮件 //    'USER_IS_LOCKED' => 244,      ///< 用户是否被锁定 //    'USER_DESC' => 245,           ///< 用户是否被锁定 //    'ROLE_PRIORITY' => 250,           ///< 角色优先级 //    //Begin:Added by zkf2003,2010-07-20 of第三方告警//    'DEV_TYPE' => 255, ///< 设备ID //    //End:Added by zkf2003,2010-07-20 of 第三方告警 VVD47339//    'QUERY_TYPE_MAX' => 251,        ///< 无效值 //    'RES_TYPE' => 256,                ///<资源类型//    'IS_QUERY_SUB' => 257,          ///<是否查下级域//    'RES_ID' => 258,                ///< 资源ID // //added by lisufen 06653 for ROLE VVD52953    'SUPPORT_LINK' => 259,          ///< 是否支持联动 //  //added by ykf1510 for 新增告警类型自定义VVD58218    'SUPPORT_GUARD' => 260,         ///< 是否支持布防 //  //added by ykf1510 for 新增告警类型自定义VVD58218    'RES_ATTRIBUTE' => 261          ///< 支持按资源属性查询 //  //added by kf1606 for vvd56513*//*** 查询条件枚举值*//*    'EQUAL_FLAG' => 0, ///< 等于 //    'GREAT_FLAG' => 1, ///< 大于 //    'LITTLE_FLAG' => 2, ///< 小于 //    'GEQUAL_FLAG' => 3, ///< 大于等于 //    'LEQUAL_FLAG' => 4, ///< 小于等于 //    'LIKE_FLAG' => 5, ///< 模糊查询 //    'ASCEND_FLAG' => 6, ///< 升序 //    'DESCEND_FLAG' => 7, ///< 降序 //         'NEQUAL_FLAG' => 8, ///< 不等于 //  //Begin:Modified by zkf2003 for VVD52949 2010-01-27//    'LOGIC_FLAG_MAX' => 9 ///< 无效值 // //Begin:Added by zkf2003 for VVD52949 2010-01-27//*//** * 资源类型枚举 */ /*define('RESTYPE_ORG','1');                      ///< 组织域 //define('RESTYPE_OUTER_DOMAIN','2');             ///< 外域 //define('RESTYPE_LOCAL_DOMAIN','3');             ///< 本域 //define('RESTYPE_DM','11');                     ///< DM //define('RESTYPE_MS','12');                     ///< MS //define('RESTYPE_VX500','13');                  ///< VX500 //define('RESTYPE_MONITOR','14');              ///< 监视器 //define('RESTYPE_EC','15');                     ///< EC //define('RESTYPE_DC','16');                     ///< DC //// Add by nixueliang for V1 ECR 2010-10-12 //define('RESTYPE_ECR','18');                     ///< ECR //define('RESTYPE_CAMERA','1001');               ///< 摄像机 //define('RESTYPE_ALARM_SOURCE','1003');         ///< 告警源 //define('RESTYPE_STORAGE_DEV','1004');          ///< 存储设备 //define('RESTYPE_TRANS_CHANNEL','1005');        ///< 透明通道 //define('RESTYPE_ALARM_OUTPUT','1200');         ///< 告警输出 //define('RESTYPE_GUARD_TOUR_RESOURCE','2001');  ///< 轮切资源 //define('RESTYPE_GUARD_TOUR_PLAN','2002');      ///< 轮切计划 //define('RESTYPE_MAP',' 2003');                  ///< 地图 //define('RESTYPE_XP','2005');                   ///< XP //define('RESTYPE_XP_WIN','2006');               ///< XP窗格 //define('RESTYPE_GUARD_PLAN','2007');           ///< 布防计划 //define('RESTYPE_CAMERA_GROUP','3002');         ///< 摄像机组 //define('RESTYPE_MONITOR_GROUP','3003');        ///< 监视器组 //define('RESTYPE_SALVO_RESOURCE','3004');       ///< 组显示资源 //define('RESTYPE_GROUP_SWITCH_RESOURCE','3010');///< 组轮巡资源 //define('RESTYPE_GROUP_SWITCH_PLAN','3011');    ///< 组轮巡计划资源 //*//*** 获取资源接口演示（以摄像机为例）* 这个接口会用到很多枚举值，相应的枚举值见上边的注释部分* 资源类型枚举有：摄像机（1001），ec（15），dc（16）等* 查询条件解释，举例如下：* “资源类型 == 摄像机” 可以解析为：*       '<QueryType>256</QueryType>'+   //256表示按照‘资源’查询，在上述枚举中可以找到*       '<LogicFlag>0</LogicFlag>'+     //0表示‘等于’          ，在上述枚举中可以找到*       '<QueryData>1001</QueryData>'+  //1001表示‘摄像机’     ，在上述枚举中可以找到*/function DoGetCamList(){var strXmlQueryCondition = "";strXmlQueryCondition =  '<?xml version="1.0" ?>'+'<data>'+  '<ItemNum>4</ItemNum>'+                   //总共有四个查询条件'<QueryConditionList count="4">'+'<item>'+                                   // 不查询子域      '<QueryType>257</QueryType> '+      '<LogicFlag>0</LogicFlag> '+      '<QueryData>0</QueryData> '+    '</item>'+  '<item>'+                                //查询的资源类型是摄像头      '<QueryType>256</QueryType>'+      '<LogicFlag>0</LogicFlag>'+      '<QueryData>1001</QueryData>'+    '</item>'+  '<item>'+                               // 查询的资源子类型是固定摄像头      '<QueryType>11</QueryType>'+      '<LogicFlag>0</LogicFlag>'+      '<QueryData>1</QueryData>'+     '</item>'+  '<item>'+                               // 查询结果按照名称的升序排序      '<QueryType>1</QueryType> '+      '<LogicFlag>6</LogicFlag>'+       '<QueryData /> '+   '</item>'+   '</QueryConditionList>'+  '</data>';var strXmlQueryPageInfo = '<?xml version="1.0" ?> '+'<data>'+  '<PageRowNum>100</PageRowNum>'+                     //最多返回100个记录  '<PageFirstRowNumber>0</PageFirstRowNumber>'+       //从第0个记录开始返回  '<QueryCount>1</QueryCount>'+                       //还需要返回总记录数'</data>';    var retStr = "";    retStr = g_imosActivePlayer.IMOSAX_QueryOrgResListEx('iccsid', strXmlQueryCondition, strXmlQueryPageInfo);    var cameraListObj = loadXML(retStr);    if(!cameraListObj){	    return;	}	var firstCameraCode = cameraListObj.documentElement.selectNodes("//result/ResList/item/ResItemV1/ResCode");//参见文档xml结构进行解析	firstCameraCode = firstCameraCode[0].text;	alert("检索到的第一个摄像机的编码是：" + firstCameraCode);}//发送云台指令function DoStartPtz(){    //开始云台控制    /* 发送云台控制指令*/   if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }    //摄像机名称    var cameraId = document.getElementById("CamIDText").value;    var PtzCmd = parseInt(document.getElementById("PtzCmdText").value, 16);    var ptzSpeed = 6;    var flag = g_imosActivePlayer.IMOSAX_SendPtzCtrlCommand(cameraId, PtzCmd, ptzSpeed, ptzSpeed, 0);    if(0 != flag){        alert("云台控制出错，错误码：" + flag);    }}function DoStopPtz(){    if(!g_imosActivePlayer) {        alert("未安装控件，请先安装后再使用本页面");        return;    }    //摄像机名称    var cameraId = document.getElementById("CamIDText").value;    var PtzCmd = 0x0901;    var ptzSpeed = 6;    var flag = g_imosActivePlayer.IMOSAX_SendPtzCtrlCommand(cameraId, PtzCmd, ptzSpeed, ptzSpeed, 0);    if(0 != flag){        alert("云台控制出错，错误码：" + flag);    }}function DoQueryRecord(){    var cameraId = document.getElementById("CamIDText").value;    var startQueryTime = document.getElementById("StartTimeText").value;    var endQueryTime = document.getElementById("EndTimeText").value;    var retStr = g_imosActivePlayer.IMOSAX_QueryRecord(cameraId, startQueryTime, endQueryTime);    if(!retStr){        return;    }    var recordListObj = loadXML(retStr);    var RecordObjArray = recordListObj.documentElement.selectNodes("//RESLIST/item");        var FileListObj = document.all.FileList;    FileListObj.innerHTML = '';    for(i = 0; i < RecordObjArray.length; i++){         var FileName = RecordObjArray[i].selectSingleNode("FileName").text;        var StartTime = RecordObjArray[i].selectSingleNode("StartTime").text;        var EndTime = RecordObjArray[i].selectSingleNode("EndTime").text;        AddList(FileListObj, StartTime + '~' + EndTime, FileName);    }
}var g_DownloadId = null;function DoDownRecord(){    var cameraId = document.getElementById("CamIDText").value;    var FileListObj = document.all.FileList;    var file_name = FileListObj.value;    var start_time;    var stop_time;    var time_array;    // 从列表中获取当前选择的文件起止时间    for(var i = 0; i < FileListObj.options.length; i++){        if(FileListObj.options[i].value == FileListObj.value){            time_array = FileListObj.options[i].innerText.split("~");            start_time = time_array[0];            stop_time = time_array[1];            DebugAlert(start_time + ":" + stop_time);            break;        }    }    if("" == time_array){        return;    }    g_DownloadId = g_imosActivePlayer.IMOSAX_StartDownMediaStream(cameraId, start_time, stop_time);}//停止录像下载function DoStopDownRecord(){    var flag = g_imosActivePlayer.IMOSAX_StopDownMediaStream(g_DownloadId);    if(0 != flag){        alert("关闭下载失败，错误码：" + flag);    }    else{        alert("停止成功");    }}function DoPlayRecord(){    var frameNum = g_curFrameNum;    frameNum = parseInt(frameNum, 10);        if(isNaN(frameNum) || frameNum < 1 || frameNum > 25){        alert("请先选择一个窗格");        return;    }	var cameraId = document.getElementById("CamIDText").value;        var FileListObj = document.all.FileList;    var file_name = FileListObj.value;    var start_time;    var stop_time;    var time_array;    // 从列表中获取当前选择的文件起止时间    for(var i = 0; i < FileListObj.options.length; i++){        if(FileListObj.options[i].value == FileListObj.value){            time_array = FileListObj.options[i].innerText.split("~");            start_time = time_array[0];            stop_time = time_array[1];            DebugAlert(start_time + ":" + stop_time);            break;        }    }	if("" == time_array){	    return;	}    var flag = g_imosActivePlayer.IMOSAX_StartVodReplay(frameNum, cameraId, start_time, stop_time);	if(0 != flag){	     alert("回放失败，错误码：" + flag);	}}//停止录像回放function DoStopPlayRecord(){    var frameNum = g_curFrameNum;    frameNum = parseInt(frameNum, 10);        if(isNaN(frameNum) || frameNum < 1 || frameNum > 25){        alert("请先选择一个窗格");        return;    }    var flag = g_imosActivePlayer.IMOSAX_StopReplay(frameNum);    if(0 != flag){	     alert("关闭回放失败，错误码：" + flag);	}}//获取播放进度function GetReplayPos(){    var frameNum = g_curFrameNum;    frameNum = parseInt(frameNum, 10);        if(isNaN(frameNum) || frameNum < 1 || frameNum > 25){        alert("请先选择一个窗格");        return;    }    var posTime = g_imosActivePlayer.IMOSAX_GetReplayPos(frameNum);	alert(posTime);}//回放控制function ReplayControl(cmd){    }//回放跳转function SetPos(){    var frameNum = g_curFrameNum;    frameNum = parseInt(frameNum, 10);        if(isNaN(frameNum) || frameNum < 1 || frameNum > 25){        alert("请先选择一个窗格");        return;    }	var pos = document.all.PosText.value;   //时间格式为：yyyy-mm-dd hh:mm:ss    var flag = g_imosActivePlayer.IMOSAX_DragPlay(frameNum, pos)	if(0 != flag){	     alert("拖动回放失败，错误码：" + flag);	}    }//设置播放速度function SetPlaySpeed(speed){    var frameNum = g_curFrameNum;    frameNum = parseInt(frameNum, 10);        if(isNaN(frameNum) || frameNum < 1 || frameNum > 25){        alert("请先选择一个窗格");        return;    }    var flag = g_imosActivePlayer.IMOSAX_SetPlaySpeed(frameNum, speed);    if(0 != flag){	     alert("设置回放速度失败，错误码：" + flag);	}}//抓拍//抓拍图片将保存在指定路径下, 以当天日期为名称的文件夹内function DoSnatch(){    var frameNum = g_curFrameNum;    frameNum = parseInt(frameNum, 10);        if(isNaN(frameNum) || frameNum < 1 || frameNum > 25){        alert("请先选择一个窗格");        return;    }    var flag = g_imosActivePlayer.IMOSAX_SnatchOnce(frameNum);    if(0 != flag){	     alert("抓拍失败，错误码：" + flag);	}}//================>功能函数---end//================>事件处理函数event---start/** * 窗格单击事件的处理函数 */function dealEventClickFrame(ulFrameNum, pcFrameInfo){    //当前窗格    g_curFrameNum = ulFrameNum;    pcFrameInfo = pcFrameInfo.replaceAll("\"", "\'");    var tmpXmlDoc = loadXML(pcFrameInfo);    if(!tmpXmlDoc){        return;    }    //将需要的数据从xml中获取，方便后续使用}//================>事件处理函数event---end</script></head><body onload="InitPage()" onbeforeunload="DoLogout()" style="font-size:10pt">    <b>[基本参数] </b>    用户名:<input type=text id="UserNameText" value='loadmin' size=15></text>&nbsp;&nbsp;&nbsp;    密码:<input type=text id="PassWordText" value='loadmin' size=15></text>&nbsp;&nbsp;&nbsp;    服务器IP:<input type=text id="ServerIPText" value='192.168.20.15' size=15></text>&nbsp;&nbsp;&nbsp;    <hr>	<b>[基本参数] </b>    用户名:<input type=text id="UserNameText2" value='loadmin' size=15></text>&nbsp;&nbsp;&nbsp;    密码:<input type=text id="PassWordText2" value='loadmin' size=15></text>&nbsp;&nbsp;&nbsp;    服务器IP:<input type=text id="ServerIPText2" value='192.168.20.16' size=15></text>&nbsp;&nbsp;&nbsp;    <hr>	<b>[基本参数] </b>    用户名:<input type=text id="UserNameText3" value='loadmin' size=15></text>&nbsp;&nbsp;&nbsp;    密码:<input type=text id="PassWordText3" value='loadmin' size=15></text>&nbsp;&nbsp;&nbsp;    服务器IP:<input type=text id="ServerIPText3" value='192.168.20.13' size=15></text>&nbsp;&nbsp;&nbsp;    <hr>	    <b>[使用流程] </b>    <input type=button onclick="DoLogin()" value="登录"></input>------->    业务操作------>    <input type=button onclick="DoLogout()" value="退出登录"></input>    <input type=button onclick="DoGetCamList()" value="查询资源接口演示（以摄像机为例）"></input>	<input type=button onclick="DoSetUserInfo()" value="设置用户信息"></input>    <hr>	<b>[使用流程] </b>    <input type=button onclick="DoLogin2()" value="登录"></input>------->    业务操作------>    <input type=button onclick="DoLogout2()" value="退出登录"></input>    <input type=button onclick="DoGetCamList()" value="查询资源接口演示（以摄像机为例）"></input>	<input type=button onclick="DoSetUserInfo2()" value="设置用户信息"></input>    <hr>	<b>[使用流程] </b>    <input type=button onclick="DoLogin3()" value="登录"></input>------->    业务操作------>    <input type=button onclick="DoLogout3()" value="退出登录"></input>    <input type=button onclick="DoGetCamList()" value="查询资源接口演示（以摄像机为例）"></input>	<input type=button onclick="DoSetUserInfo3()" value="设置用户信息"></input>    <hr>    <b>[实况业务] </b>    摄像机ID:<input type=text id="CamIDText" value='ec2004-hf-187_cam_1'></text>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <input type=button onclick="DoStartPlay()" value="启动播放"></input>&nbsp;&nbsp;&nbsp;    <input type=button onclick="DoStopPlay()" value="停止播放"></input>    <hr>    <b>[云台业务] </b>    控制指令:<input type=text id="PtzCmdText" value="0x0402"></text>&nbsp;&nbsp;&nbsp;    <input type=button onclick="DoStartPtz()" value="启动"></input>&nbsp;&nbsp;&nbsp;    <input type=button onclick="DoStopPtz()" value="停止"></input>    <hr>    <b>[设置云台速度] </b>    云台速度:<input type=text id="ptzValue" value="6"></text>&nbsp;&nbsp;&nbsp;    <input type=button onclick="setPtzSpeed()" value="设置"></input>    <hr>    <b>[本地录像播放业务] </b>    录像路径:<input type=text id="localRecordPath" size=100 value=""></text>&nbsp;&nbsp;&nbsp;    <input type=button onclick="startLocalReplay()" value="播放本地录像">    <hr>    <b>[回放业务1] </b>    起始时间:<input type=text id="StartTimeText" size=24 value="2012-11-23 00:00:00"></text>&nbsp;&nbsp;&nbsp;    结束时间:<input type=text id="EndTimeText" size=24 value="2012-11-23 23:59:59"></text>&nbsp;&nbsp;&nbsp;    <input type=button onclick="DoQueryRecord()" value="查询"></input>&nbsp;&nbsp;&nbsp;    <input type=button onclick="DoPlayRecord()" value="播放选中文件"></input>&nbsp;&nbsp;&nbsp;    <input type=button onclick="DoStopPlayRecord()" value="停止播放"></input>    <input type=button onclick="DoDownRecord()" value="下载选中文件"></input>&nbsp;&nbsp;&nbsp;    <input type=button onclick="DoStopDownRecord()" value="停止下载"></input>    <hr>       <b>[回放业务2] </b>    <input type=button onclick="GetReplayPos()" value="获取进度"></input>&nbsp;&nbsp;&nbsp;    设置进度[单位为秒]: <input type=text id="PosText"></text>    <input type=button onclick="SetPos()" value="GO"></input>&nbsp;&nbsp;&nbsp;    <input type=button onclick="DoSnatch()" value="抓拍"></input>&nbsp;&nbsp;&nbsp;    播放速度:<select id="PlaySpeed" onchange="SetPlaySpeed(this.value)">    <option value=0>16倍速后退播放</option>    <option value=1>8倍速后退播放</option>    <option value=2>4倍速后退播放</option>    <option value=3>2倍速后退播放</option>    <option value=4>正常速度后退播放</option>    <option value=7>1/4倍速播放</option>    <option value=8>1/2倍速播放</option>    <option value=9 selected>正常速度前进播放</option>    <option value=10>2倍速前进播放</option>    <option value=11>4倍速前进播放</option>    <option value=12>8倍速前进播放</option>   <option value=13>16倍速前进播放</option>    </select>&nbsp;&nbsp;&nbsp;    <hr>          <table width=940>    <!-- 播放控件  begin -->    <tr><td>    <object  classid="clsid:067A4418-EBAC-4394-BFBE-8C533BA6503A" id="h3c_IMOS_ActiveX" events="true"  height="480"  width="640">    </object>    <!-- 播放控件  end -->        <td width=200>    <select id="FileList" size="30" style="width:300px">    </select>    </table></body></html><!--ActiveX控件事件, 初始化完成后会触发, 告知界面当前的播放器ID--><script type="text/javascript" for= "h3c_IMOS_ActiveX" event="eventClickFrame(ulFrameNum,  pcFrameInfo)">    if(typeof dealEventClickFrame == "function"){        dealEventClickFrame(ulFrameNum,  pcFrameInfo);    }</script>