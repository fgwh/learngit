package com.hgsoft.util;

import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.hgsoft.main.entity.DicItem;
import com.hgsoft.main.service.DictionaryService;
import com.hgsoft.main.squadMana.entity.Squad;
import com.hgsoft.main.squadMana.service.SquadService;
import com.hgsoft.security.entity.Admin;
import com.hgsoft.security.entity.Org;
import com.hgsoft.security.entity.Role;
import com.hgsoft.security.service.AdminService;
import com.hgsoft.security.service.OrgService;
import com.hgsoft.security.service.RoleService;

/**
 * 系统常用信息缓存工具类
 * 
 * @date 2015-11-13
 * @author wu
 *
 */
public class CacheUtil {
	
	/**收费站集合*/
	private static List<Org> stationList;		
	
	private static List<Org> centerStationList;
	/**路段集合*/
	private static List<Org> roadList;
	 
	/**所有机构*/
	private static List<Org> allOrgList;
	
	/**父机构*/
	private static List<Org> parentOrgList;
	
	/**MAP所有机构<机构Id,机构名>*/
	private static Map<String,String> allOrgMap;
	
	/**MAP所有机构<机构Id,机构编号>*/
	private static Map<String,String> allOrgMapCode;
	
	/**MAP所有机构<机构Id,treeCode>*/
	private static Map<String,String> allOrgTreeCodeMap;
	
	/**MAP所有机构<机构OrgCode,机构名>*/
	private static Map<String,String> allOrgCodeNameMap;
	
	/**Map<收费站id,收费站> */
	private static Map<String,Org> stationIdMap;
	/**Map<收费站id,收费站名称> */
	private static Map<String,String> stationIdNameMap;
	 
	/**工班集合*/
	private static List<Squad> squadList; 
	/**Map<工班编号，工班>*/
	private static Map<Integer,Squad> squadNoMap;
	/**Map<工班编号,工班名称> */
	private static Map<Integer,String> squadNoNameMap;
	
	 
	/**系统角色集合：不包括系统管理员、运维维护管理*/
	private static List<Role> relatedRoleList;
	/**Map<角色类型编号，角色>*/
	private static Map<String,Role> relatedRoleTypeMap;
	/**Map<角色类型编号,角色名称> */
	private static Map<String,String> relatedRoleTypeNameMap;
	
	private static String inspectorList;
	/**Map<人员编号,人员名称>*/
	private static Map<String,String> staffNoNameMap;
	
	/**Map<机构OrgCode,父机构名称>*/
	private static Map<String,String> parentOrgNameMap;
	 
	/*初始化*/
	public static void init() {
		OrgService orgService = (OrgService)SpringInit.getApplicationContext().getBean(OrgService.class);
		
		stationList = orgService.findByType(OrgService.ORG_TYPE_STATION);
		centerStationList = orgService.findByType(OrgService.ORG_TYPE_CENTERSTATION);
	 
		roadList = orgService.findByType(OrgService.ORG_TYPE_ROAD);
		 
		
		allOrgList = orgService.findAllOrg();
		allOrgMap = Collections.synchronizedMap(new HashMap<String,String>());
		allOrgMapCode = Collections.synchronizedMap(new HashMap<String,String>());
		allOrgTreeCodeMap = Collections.synchronizedMap(new HashMap<String,String>());
		allOrgCodeNameMap = Collections.synchronizedMap(new HashMap<String,String>());
		
		stationIdMap = Collections.synchronizedMap(new HashMap<String, Org>());
		stationIdNameMap = Collections.synchronizedMap(new HashMap<String, String>());
		 
		parentOrgNameMap = Collections.synchronizedMap(new HashMap<String,String>());
		if(null != allOrgList){
			for (Org org : allOrgList) {
				allOrgMap.put(org.getId(), org.getOrgName());
				allOrgMapCode.put(org.getId(), org.getOrgCode());
				allOrgTreeCodeMap.put(org.getId(), org.getTreeCode());
				allOrgCodeNameMap.put(org.getOrgCode(), org.getOrgName());
			}
		}
		 
		 
		List<Org> parentOrgList;
		if(null != stationList) {
			for(Org org: stationList) {
				stationIdMap.put(org.getId(), org);
				stationIdNameMap.put(org.getId(), org.getOrgName());
				 
				parentOrgList = orgService.getUpOrgMsg(org.getTreeCode());
				if (null != parentOrgList) {
					for (Org parentOrg : parentOrgList) {
						parentOrgNameMap.put(org.getOrgCode(), parentOrg.getOrgName());
					}
				}
			}
		}		
		
		SquadService squadService = (SquadService)SpringInit.getApplicationContext().getBean(SquadService.class);
		squadList = squadService.querySquad();
		
		squadNoMap = Collections.synchronizedMap(new HashMap<Integer,Squad>());
		squadNoNameMap = Collections.synchronizedMap(new HashMap<Integer,String>());
		if(null != squadList) {
			for(Squad squad: squadList) {
				squadNoMap.put(squad.getWorkNo(), squad);
				squadNoNameMap.put(squad.getWorkNo(), squad.getWorkName());
			}
		}		
		
		RoleService roleService = (RoleService)SpringInit.getApplicationContext().getBean(RoleService.class);
		relatedRoleList = roleService.queryRelatedRoles();
		
		relatedRoleTypeMap = Collections.synchronizedMap(new HashMap<String,Role>());
		relatedRoleTypeNameMap = Collections.synchronizedMap(new HashMap<String,String>());
		if(null != relatedRoleList) {
			for(Role role: relatedRoleList) {
				relatedRoleTypeMap.put(role.getType(), role);
				relatedRoleTypeNameMap.put(role.getType(), role.getName());
			}
		}
		  
		AdminService adminService = SpringInit.getApplicationContext().getBean(AdminService.class);
		staffNoNameMap = Collections.synchronizedMap(new HashMap<String,String>());		
		adminService.initInspection();
	}
	
	/*===================== get ===================*/

	public static List<Org> getStationList() {
		return stationList;
	} 
	
	public static List<Org> getCenterStationList() {
		return centerStationList;
	}

	public static List<Org> getRoadList() {
		return roadList;
	}
 
	public static Map<String, Org> getStationIdMap() {
		return stationIdMap;
	}
  
	public static List<Squad> getSquadList() {
		return squadList;
	}

	public static Map<Integer, Squad> getSquadNoMap() {
		return squadNoMap;
	}
  
	public static List<Role> getRelatedRoleList() {
		return relatedRoleList;
	}
	
	public static Map<String,Role> getRelatedRoleTypeMap() {
		return relatedRoleTypeMap;
	}
	 
	public static Map<String, String> getStationIdNameMap() {
		return stationIdNameMap;
	}
 
	public static Map<Integer, String> getSquadNoNameMap() {
		return squadNoNameMap;
	}

	public static Map<String, String> getRelatedRoleTypeNameMap() {
		return relatedRoleTypeNameMap;
	} 
	
	public static List<Org> getAllOrgList() {
		return allOrgList;
	}

	public static Map<String, String> getAllOrgMap() {
		return allOrgMap;
	}

	public static Map<String, String> getAllOrgMapCode() {
		return allOrgMapCode;
	}

	public static Map<String, String> getAllOrgTreeCodeMap() {
		return allOrgTreeCodeMap;
	}
 
	public static Map<String, String> getAllOrgCodeNameMap() {
		return allOrgCodeNameMap;
	}
	
	public static String getInspectorList() {
		return inspectorList;
	}

	public static void setInspectorList(String inspectorList) {
		CacheUtil.inspectorList = inspectorList;
	}

	public static Map<String, String> getStaffNoNameMap() {
		return staffNoNameMap;
	}

	public static void setStaffNoNameMap(Map<String, String> staffNoNameMap) {
		CacheUtil.staffNoNameMap = staffNoNameMap;
	}
 
	public static List<Org> getParentOrgList() {
		return parentOrgList;
	}

	public static Map<String, String> getParentOrgNameMap() {
		return parentOrgNameMap;
	}
	
}
