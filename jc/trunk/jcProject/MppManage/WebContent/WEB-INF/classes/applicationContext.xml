<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		 http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <jaxws:endpoint
            id="hgsoftWS"
            implementor="com.hgsoft.cxf.server.impl.CallMessageImpl"
            address="/hgsoft" >
       <!--<jaxws:inInterceptors>
            <bean  id="soapAuth" class="cn.jd.ws.interceptor.SOAPAuthIntercepter"><property name="token" value="ssssdddd"></property></bean>
        </jaxws:inInterceptors>-->
    </jaxws:endpoint>

    <bean id = "PermissionsInterceptor" class="com.hgsoft.security.util.PermissionsInterceptor"/>
    <!--<bean id="client" class="com.hgsoft.cxf.service.HelloWorld"
          factory-bean="clientFactory" factory-method="create"/>

    <bean id="clientFactory" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean">
        <property name="serviceClass" value="com.hgsoft.cxf.service.HelloWorld"/>
        <property name="address"
                  value="http://192.168.1.50:9090/helloWorld"/>
    </bean>-->

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
	<bean id="messageOperateService" class="com.hgsoft.main.im.service.MessageOperateService"/>
	<bean id="stationService" class="com.hgsoft.main.service.StationService"/>
	<bean id="roadService" class="com.hgsoft.main.service.RoadService"/>
	<bean id="etcPictureService" class="com.hgsoft.job.service.EtcPictureService"/>
	<!-- <bean id="helloJobServices" class="com.hgsoft.job.service.HelloJobServices" />  -->
    <!-- 避免部署多个含有数据源项目时，警告的出现 -->
    <bean id="sysProps" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="java.lang.System"/>
        <property name="targetMethod" value="setProperty"/>
        <property name="arguments">
            <list>
                <value>com.mchange.v2.c3p0.management.ManagementCoordinator</value>
                <value>com.mchange.v2.c3p0.management.NullManagementCoordinator</value>
            </list>
        </property>
    </bean>

    <!-- 数据源设置 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- C3P0连接池 -->
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
        <!-- <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/> -->
        <property name="breakAfterAcquireFailure" value="${c3p0.breakAfterAcquireFailure}"/>
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
        <property name="testConnectionOnCheckin" value="${c3p0.testConnectionOnCheckin}"/>
        <property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}"/>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
        <property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}"/>
        <property name="preferredTestQuery" value="select GETDATE()"/>
        <!-- <property name="maxStatements" value="${c3p0.maxStatements}"/>  -->
    </bean>

    <!-- 配置文件注入 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:driver.properties</value>
                <value>classpath:ftp.properties</value>
            </list>
        </property>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
            </props>
        </property>

        <property name="mappingLocations" value="classpath:com/hgsoft/**/*.hbm.xml"/>

        <property name="packagesToScan">
            <list>
            	<value>com.hgsoft.*.entity</value>
                <value>com.hgsoft.main.*.entity</value>
                <value>com.hgsoft.security.*.entity</value>
                <value>com.hgsoft.base.*.entity</value>
            </list>
        </property>
    </bean>
    <!--<aop:config proxy-target-class="true"/>-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:component-scan base-package="com.hgsoft" />
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <!-- <bean id="logAspect" class="com.hgsoft.aop.LogAspect"  /> -->
    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 配置事务传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="reverseSave*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="addListSave*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="firstSave*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="badRecycleSave*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="checkErrorSave*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="inspectSave*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="transferUpdate*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="changeUpdate*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="batchDelete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="cancel*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="reduce*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="downloadFile*" propagation="REQUIRED" rollback-for="Exception"/> 
            <tx:method name="settlement*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="initDownloadLog*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="send*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="finish*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="import*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- 定义使用事务管理的方法 -->
    <aop:config>
        <aop:pointcut id="managerMethod"
                      expression="execution(* com.hgsoft.*.service.*.*(..))"/>
        <aop:advisor pointcut-ref="managerMethod" advice-ref="txAdvice"/>
    </aop:config>
    <aop:config>
        <aop:pointcut id="managerMethod2"
                      expression="execution(* com.hgsoft.*.*.service.*.*(..))"/>
        <aop:advisor pointcut-ref="managerMethod2" advice-ref="txAdvice"/>
    </aop:config>
    <aop:config>
        <aop:pointcut id="managerMethod3"
                      expression="execution(* com.hgsoft.main.*.service.*.*(..))"/>
        <aop:advisor pointcut-ref="managerMethod3" advice-ref="txAdvice"/>
    </aop:config>
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

</beans>
