<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
          >
    <!--  default-autowire="byName" default-lazy-init="true" -->
	<bean id="schedulerFactory"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy" scope="singleton">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 通过applicationContextSchedulerContextKey属性配置spring上下文 -->    
		<property name="applicationContextSchedulerContextKey" value="applicationContext"/>
		<!--QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了        -->        
		<property name="overwriteExistingJobs" value="true"/>
		<!-- <property name="transactionManager" ref="transactionManager">
		</property>
		 在SchedulerFactoryBean初始化完成后，延迟20秒启动Scheduler，以便让Spring能够更快初始化容器中剩余的Bean。-->    
        <property name="startupDelay" value="20" />   
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">QuartzScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.threadPool.threadCount">10</prop>
				<prop key="org.quartz.threadPool.threadPriority">5</prop> 
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<!-- <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreCMT</prop> -->
				<!-- <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.MSSQLDelegate</prop>-->
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				<!-- <prop key="org.quartz.jobStore.isClustered">false</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>-->
				<prop key="org.quartz.jobStore.selectWithLockSQL">SELECT * FROM {0}LOCKS UPDLOCK WHERE LOCK_NAME = ?</prop>
			</props>
		</property>
		<!-- 指定 quartz.properties文件路径 -->
		<!--<property name="configLocation" value="classpath:quartz.properties" />   -->
	</bean>
</beans>
